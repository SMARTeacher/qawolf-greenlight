import zod from "zod";
declare const environmentVariablesSchema: zod.ZodRecord<zod.ZodString, zod.ZodString>;
export declare const jsonEnvironmentVariablesSchema: zod.ZodPipeline<zod.ZodEffects<zod.ZodString, unknown, string>, zod.ZodRecord<zod.ZodString, zod.ZodString>>;
export type EnvironmentVariables = zod.infer<typeof environmentVariablesSchema>;
export declare const jsonEnvironmentsMappingSchema: zod.ZodPipeline<zod.ZodEffects<zod.ZodString, unknown, string>, zod.ZodArray<zod.ZodObject<{
    environmentAlias: zod.ZodString;
    vcsBranch: zod.ZodString;
}, "strip", zod.ZodTypeAny, {
    environmentAlias: string;
    vcsBranch: string;
}, {
    environmentAlias: string;
    vcsBranch: string;
}>, "many">>;
export {};
//# sourceMappingURL=types.d.ts.map