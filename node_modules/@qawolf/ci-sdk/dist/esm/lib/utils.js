export function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
export function pluralize(count) {
    return count === 1 ? "" : "s";
}
/**
 * Statically verify that provided value is assignable to a desired type
 */
export function assertType(_value) {
    // noop
}
export function getBackoffMs(attemptNumber, minWaitMs = 1000, maxWaitMs = 10000) {
    return Math.min(maxWaitMs, minWaitMs * 1.2 ** attemptNumber);
}
export const buildFetchWithTimeout = (fetch, timeout) => async (...args) => fetch(args[0], { ...args[1], signal: AbortSignal.timeout(timeout) });
//# sourceMappingURL=utils.js.map