import { type SdkDependencies } from "./dependencies";
export declare function makeQaWolfSdk({ apiKey, serviceBase, }: {
    apiKey: string;
    serviceBase?: string;
}, { log, fetch, }?: Partial<SdkDependencies>): {
    attemptNotifyDeploy: (config: Partial<import("../api").DeployConfig>) => Promise<import("./domain/attempt-deploy").NotifyDeployStatus>;
    experimental_removeEnvironment: (config: {
        branch: string;
    }) => Promise<void>;
    experimental_testPreview: (config: import("./domain/legacy_previewTesting/index").TestPreviewParams) => Promise<import("./domain/attempt-deploy").NotifyDeployStatus>;
    experimental_vcsBranchTesting: import("./domain/vcsBranchTesting").VCSBranchTestingSDK;
    pollCiGreenlightStatus: (args_0: import("./domain/poll-ci-greenlight").PollCiGreenlightParams) => Promise<import("./domain/poll-ci-greenlight").PollCiGreenlightStatus>;
};
export type * from "./domain/poll-ci-greenlight";
export type * from "./domain/attempt-deploy";
export * from "./domain/vcsBranchTesting/index";
//# sourceMappingURL=index.d.ts.map