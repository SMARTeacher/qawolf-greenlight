import { buildFetchWithTimeout } from "../utils";
import { defaultFetch } from "./defaults/fetch";
import { defaultLogDriver } from "./defaults/log";
import { defaultServiceBase } from "./defaults/serviceBase";
import { attemptNotifyDeploy } from "./domain/attempt-deploy";
import { removeEnvironment, testPreview, } from "./domain/legacy_previewTesting/index";
import { pollCiGreenlightStatus } from "./domain/poll-ci-greenlight";
import { makeVCSBranchTestingSDK } from "./domain/vcsBranchTesting";
export function makeQaWolfSdk({ apiKey, serviceBase = defaultServiceBase, }, { log = defaultLogDriver, fetch = defaultFetch, } = {}) {
    if (typeof fetch !== "function") {
        throw new Error(`QA Wolf CI-SDK requires fetch to be defined. Make sure you are using NodeJS 18+, OR pass a fetch polyfill to the makeQaWolfSdk function.
We recommend 'undici' package for that purpose. See the Requirement section of our README for more guidance.`);
    }
    const deps = {
        // Versions of fetch may have different default timeouts. For consistency, we explicitly set it to 60 seconds here.
        fetch: buildFetchWithTimeout(fetch, 60000),
        log,
    };
    const apiConfig = { apiKey, serviceBase };
    return {
        attemptNotifyDeploy: attemptNotifyDeploy.bind(null, deps, apiConfig),
        experimental_removeEnvironment: removeEnvironment.bind(null, deps, apiConfig),
        experimental_testPreview: testPreview.bind(null, deps, apiConfig),
        experimental_vcsBranchTesting: makeVCSBranchTestingSDK(apiConfig, deps),
        pollCiGreenlightStatus: pollCiGreenlightStatus.bind(null, deps, apiConfig),
    };
}
export * from "./domain/vcsBranchTesting/index";
//# sourceMappingURL=index.js.map