import { qawolfGraphQLEndpoint } from "./constants";
export async function createEnvironmentVariables(deps, apiConfig, { environmentId, variables, }) {
    const environmentVariableRequests = Object.keys(variables).map(async (key) => {
        const value = variables[key];
        return deps.fetch(qawolfGraphQLEndpoint, {
            body: JSON.stringify({
                query: `
            mutation UpsertEnvironmentVariable($environmentId: ID!, $value: String!, $name: String) {
              upsertEnvironmentVariable(environmentId: $environmentId, value: $value, name: $name) {
                id
              }
            }
          `,
                variables: {
                    environmentId,
                    name: key,
                    value,
                },
            }),
            headers: {
                Authorization: `Bearer ${apiConfig.apiKey}`,
                "Content-Type": "application/json",
            },
            method: "post",
        });
    });
    await Promise.all(environmentVariableRequests);
}
//# sourceMappingURL=createEnvironmentVariables.js.map