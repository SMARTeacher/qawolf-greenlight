import { type ApiConfig } from "../../../api-types";
import { type SdkDependencies } from "../../dependencies";
import { type BaseVCSBranchConfig, type PullRequestTestingLayout } from "./types";
export declare function notifyVCSBranchBuildDeployed(deps: SdkDependencies, apiConfig: ApiConfig, input: NotifyBuildDeployedInput): Promise<NotifyBuildDeployedResult>;
export type NotifyBuildDeployedInput = PullRequestTestingLayout & BaseVCSBranchConfig & {
    /**
     * A natural positive integer that defines the maximum number of concurrent
     * workflows that can be executed for this deployment. It will default to
     * the concurrency limit defined in the base environment.
     *
     * @remark `0` and `Infinity` are valid values and will disable concurrency
     * limits.
     */
    concurrencyLimit?: number;
    /**
     * A human-friendly name for the environment that was deployed. For PR testing,
     * we recommend using "PR #<PR_NUMBER> - <PR_NAME>".
     */
    headEnvironmentName: string;
    /**
     * Environment variables overrides for the build that was deployed.
     * These variables are used in QA Wolf workflows, and must be communicated
     * to provide any specific configuration for this deployment.
     *
     * The most common environment variable is URL, which is used to locate the
     * deployment in E2E tests.
     *
     * @remark Determining which environment environment variables must be set
     * will require assistance from a QA Wolf representative.
     */
    headEnvironmentVariables: Record<string, string>;
    /**
     * The VCS commit ID of the build that was deployed. Must be unique for this
     * repository, and is used as a unique build identifier.
     */
    headVcsCommitId: string;
    /**
     * The VCS commit URL of the build that was deployed. When provided,
     * it will be used in the QA Wolf UI to link to the build.
     */
    headVcsCommitUrl?: string;
    /**
     * A unique identifier for the PR/MR being tested.
     *
     * This field is a prerequisite for PR/MR comments feature to work,
     * in which QA Wolf will post a comment with test results, including
     * live updates.
     */
    pullOrMergeRequestNumber?: number;
};
export type NotifyBuildDeployedAbortReason = "forbidden" | "unauthenticated" | "network-error" | "server-error" | "invalid-input" | "base-environment-not-found" | "base-trigger-not-found" | "head-trigger-not-found" | "non-ephemeral-head-environment-violation" | "missing-vcs-branch-to-environment-alias-mapping" | "run-creation-failed";
export type NotifyBuildDeployedResult = {
    /**
     * When non-nil, indicates that a code hosting service installation was
     * found and enabled. This will allow QA Wolf to interact with this service
     * and post run status comments on PRs/MRs.
     */
    codeHostingServiceInstallationType: "GitHub" | "GitLab" | undefined;
    outcome: "success";
    runId: string;
} | {
    abortReason: NotifyBuildDeployedAbortReason;
    outcome: "aborted";
};
//# sourceMappingURL=notify-vcs-branch-build-deployed.d.ts.map