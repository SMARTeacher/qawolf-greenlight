import { qawolfGraphQLEndpoint } from "./constants";
export async function getEnvironmentIdForBranch(deps, apiConfig, branch) {
    const response = await deps.fetch(qawolfGraphQLEndpoint, {
        body: JSON.stringify({
            query: `
        query getTriggersForBranch($where: TriggerWhereInput) {
          triggers(where: $where) {
            id
            environment_id
          }
        }
      `,
            variables: {
                where: {
                    deployment_branches: {
                        contains: branch,
                    },
                },
            },
        }),
        headers: {
            Authorization: `Bearer ${apiConfig.apiKey}`,
            "Content-Type": "application/json",
        },
        method: "post",
    });
    const responseJson = (await response.json());
    deps.log.info(`Trigger response: ${JSON.stringify(responseJson)}`);
    const triggers = responseJson.data.triggers;
    if (!triggers || !triggers[0]) {
        throw Error(`No environment found for branch: ${branch}`);
    }
    return triggers[0].environment_id;
}
//# sourceMappingURL=getEnvironmentIdForBranch.js.map