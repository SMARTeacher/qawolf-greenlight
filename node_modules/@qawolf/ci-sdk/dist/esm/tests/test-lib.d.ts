import { type CiGreenlightStatusBase } from "../lib/api/ci-greenlight";
export declare function makeVCSBranchTestingSDKForTest({ apiKey }: {
    apiKey: string;
}): {
    fetch: import("jest-mock").Mock<() => Promise<Response>>;
    sdk: import("../lib/sdk/index").VCSBranchTestingSDK;
};
export declare function makeQaWolfSdkForTest({ apiKey }: {
    apiKey: string;
}): {
    fetch: import("jest-mock").Mock<() => Promise<Response>>;
    sdk: {
        attemptNotifyDeploy: (config: Partial<import("..").DeployConfig>) => Promise<import("../lib/sdk/index").NotifyDeployStatus>;
        experimental_removeEnvironment: (config: {
            branch: string;
        }) => Promise<void>;
        experimental_testPreview: (config: import("../lib/sdk/domain/legacy_previewTesting").TestPreviewParams) => Promise<import("../lib/sdk/index").NotifyDeployStatus>;
        experimental_vcsBranchTesting: import("../lib/sdk/index").VCSBranchTestingSDK;
        pollCiGreenlightStatus: (args_0: import("../lib/sdk/index").PollCiGreenlightParams) => Promise<import("../lib/sdk/index").PollCiGreenlightStatus>;
    };
};
export declare function buildResponse<ResponseJSON>(response: ResponseJSON, status?: number): Response;
export declare function buildCiGreenlightStatusBase(): CiGreenlightStatusBase;
//# sourceMappingURL=test-lib.d.ts.map