import { type ApiConfig } from "../api-types";
import { type SdkDependencies } from "../sdk/dependencies";
/**
 * Refer to our official documentation for more information:
 * https://qawolf.notion.site/dd72e46ceb7f451dae4e9ef06f64a2cc
 */
export type DeployConfig = {
    branch: string | undefined;
    commitUrl: string | undefined;
    deduplicationKey: string | undefined;
    deploymentType: string | undefined;
    deploymentUrl: string | undefined;
    hostingService: "GitHub" | "GitLab" | undefined;
    sha: string | undefined;
    variables: Record<string, string> | undefined;
};
export type DeployStatus = {
    results: Array<{
        created_suite_id?: string;
        failure_reason?: string;
    }>;
};
export declare function postDeploySuccess({ apiKey, serviceBase }: ApiConfig, { branch, commitUrl, deduplicationKey, deploymentType, deploymentUrl, hostingService, sha, variables, }: Partial<DeployConfig>, { fetch: localFetch }: SdkDependencies): Promise<{
    readonly failureReason: "no-matched-trigger";
    readonly success: false;
    readonly details?: undefined;
    readonly runId?: undefined;
    readonly httpStatus?: undefined;
} | {
    readonly details: string;
    readonly failureReason: "run-could-not-be-created";
    readonly success: false;
    readonly runId?: undefined;
    readonly httpStatus?: undefined;
} | {
    readonly runId: string;
    readonly success: true;
    readonly failureReason?: undefined;
    readonly details?: undefined;
    readonly httpStatus?: undefined;
} | {
    readonly failureReason: "5XX-server-error";
    readonly httpStatus: number;
    readonly success: false;
    readonly details?: undefined;
    readonly runId?: undefined;
} | {
    readonly failureReason: "401-unauthorized";
    readonly httpStatus: 401;
    readonly success: false;
    readonly details?: undefined;
    readonly runId?: undefined;
} | {
    readonly failureReason: "403-forbidden";
    readonly httpStatus: 403;
    readonly success: false;
    readonly details?: undefined;
    readonly runId?: undefined;
} | {
    readonly failureReason: "4XX-client-error";
    readonly httpStatus: number;
    readonly success: false;
    readonly details?: undefined;
    readonly runId?: undefined;
} | {
    readonly failureReason: "network-error";
    readonly success: false;
    readonly details?: undefined;
    readonly runId?: undefined;
    readonly httpStatus?: undefined;
}>;
//# sourceMappingURL=deploy.d.ts.map