import { type ApiConfig } from "../../../api-types";
import { type SdkDependencies } from "../../dependencies";
export interface EnvironmentCreationResponse {
    data: {
        createEnvironment: {
            branchId: string;
            id: string;
        };
    };
}
export interface EnvironmentRetrievalResponse {
    data: {
        environments: Array<{
            id: string;
        }>;
    };
}
type FindOrCreateEnvironmentParams = {
    baseEnvironmentId?: string;
    branch: string;
    pr?: {
        number: number;
        title: string;
    };
    qaWolfTeamId: string;
};
export declare function findOrCreateEnvironment(deps: SdkDependencies, apiConfig: ApiConfig, { branch, pr, qaWolfTeamId, baseEnvironmentId, }: FindOrCreateEnvironmentParams): Promise<string>;
export {};
//# sourceMappingURL=findOrCreateEnvironment.d.ts.map