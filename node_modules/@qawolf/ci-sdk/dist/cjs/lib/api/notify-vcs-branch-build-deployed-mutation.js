"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.callNotifyVCSBranchBuildDeployedMutation = callNotifyVCSBranchBuildDeployedMutation;
const graphql_1 = require("./graphql");
const mutationName = "notifyVCSBranchBuildDeployed";
const mutationGql = `
mutation NotifyVCSBranchBuildDeployed($headVcsCommitId: String!, $headEnvironmentVariablesJson: String!, $baseEnvironmentAlias: String!, $headEnvironmentAlias: String!) {
    ${mutationName}(headVcsCommitId: $headVcsCommitId, headEnvironmentVariablesJson: $headEnvironmentVariablesJson, baseEnvironmentAlias: $baseEnvironmentAlias, headEnvironmentAlias: $headEnvironmentAlias) {
    outcome
    codeHostingServiceInstallationPlatform
    failureCode
    failureDetails
    runId
  }
}`;
async function callNotifyVCSBranchBuildDeployedMutation(deps, apiConfig, { baseEnvironmentAlias, concurrencyLimit, headEnvironmentAlias, headEnvironmentName, headEnvironmentVariables, headVcsCommitId, headVcsCommitUrl, headVcsBranch, pullOrMergeRequestNumber, }) {
    return (0, graphql_1.qawolfGraphql)({
        apiConfig,
        deps,
        name: mutationName,
        query: mutationGql,
        variables: {
            baseEnvironmentAlias,
            concurrencyLimit: concurrencyLimit ?? null,
            headEnvironmentAlias,
            headEnvironmentName,
            headEnvironmentVariablesJson: JSON.stringify(headEnvironmentVariables),
            headVcsBranch: headVcsBranch ?? null,
            headVcsCommitId,
            headVcsCommitUrl: headVcsCommitUrl ?? null,
            pullOrMergeRequestNumber: pullOrMergeRequestNumber ?? null,
        },
        // The type coercion highlights that we don't have runtime schema validation
    });
}
//# sourceMappingURL=notify-vcs-branch-build-deployed-mutation.js.map