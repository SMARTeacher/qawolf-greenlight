import { type ApiConfig } from "../api-types";
import { type SdkDependencies } from "../sdk/dependencies";
import { type GraphQLResponse } from "./graphql";
export interface NotifyVCSBranchMergeCompletedMutationInput {
    baseEnvironmentAlias: string;
    headEnvironmentAlias: string;
}
export type NotifyVCSBranchMergeCompletedResponseSchema = {
    outcome: "success";
} | {
    failureCode: "invalid-input" | "head-environment-not-found" | "base-environment-not-found" | "non-ephemeral-head-environment-violation";
    failureDetails: string;
    outcome: "failed";
};
export declare function callNotifyVCSBranchMergeCompletedMutation(deps: SdkDependencies, apiConfig: ApiConfig, { headEnvironmentAlias, baseEnvironmentAlias, }: NotifyVCSBranchMergeCompletedMutationInput): Promise<GraphQLResponse<NotifyVCSBranchMergeCompletedResponseSchema>>;
//# sourceMappingURL=notify-vcs-branch-merge-completed-mutation.d.ts.map