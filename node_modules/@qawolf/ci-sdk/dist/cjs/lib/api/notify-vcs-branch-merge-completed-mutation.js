"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.callNotifyVCSBranchMergeCompletedMutation = callNotifyVCSBranchMergeCompletedMutation;
const graphql_1 = require("./graphql");
const mutationName = "notifyVCSBranchMergeCompleted";
const mutationGql = `
mutation NotifyVCSBranchMergeCompleted($baseEnvironmentAlias: String!, $headEnvironmentAlias: String!) {
${mutationName}(baseEnvironmentAlias: $baseEnvironmentAlias, headEnvironmentAlias: $headEnvironmentAlias) {
    outcome
    failureCode
    failureDetails
  }
}`;
async function callNotifyVCSBranchMergeCompletedMutation(deps, apiConfig, { headEnvironmentAlias, baseEnvironmentAlias, }) {
    return (0, graphql_1.qawolfGraphql)({
        apiConfig,
        deps,
        name: mutationName,
        query: mutationGql,
        variables: {
            baseEnvironmentAlias,
            headEnvironmentAlias,
        },
        // The type coercion highlights that we don't have runtime schema validation
    });
}
//# sourceMappingURL=notify-vcs-branch-merge-completed-mutation.js.map