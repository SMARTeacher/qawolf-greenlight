import { type GraphQLErrorPayload } from "../../../../api/graphql";
import { type LogDriver } from "../../../dependencies";
export declare function graphQLErrorToAbortResult({ graphQLPayload, log, methodName, }: {
    graphQLPayload: GraphQLErrorPayload;
    log: LogDriver;
    methodName: string;
}): {
    readonly abortReason: "forbidden";
    readonly outcome: "aborted";
} | {
    readonly abortReason: "unauthenticated";
    readonly outcome: "aborted";
} | {
    readonly abortReason: "network-error";
    readonly outcome: "aborted";
} | {
    readonly abortReason: "server-error";
    readonly outcome: "aborted";
} | {
    readonly abortReason: "invalid-input";
    readonly outcome: "aborted";
};
//# sourceMappingURL=graphql-error.d.ts.map