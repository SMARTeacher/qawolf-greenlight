"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeVCSBranchTestingSDK = makeVCSBranchTestingSDK;
const tslib_1 = require("tslib");
const fetch_1 = require("../../defaults/fetch");
const log_1 = require("../../defaults/log");
const serviceBase_1 = require("../../defaults/serviceBase");
const notify_vcs_branch_build_deployed_1 = require("./notify-vcs-branch-build-deployed");
const notify_vcs_branch_merge_canceled_1 = require("./notify-vcs-branch-merge-canceled");
const notify_vcs_branch_merge_completed_1 = require("./notify-vcs-branch-merge-completed");
tslib_1.__exportStar(require("./types"), exports);
tslib_1.__exportStar(require("./lib/aliases"), exports);
function makeVCSBranchTestingSDK({ apiKey, serviceBase = serviceBase_1.defaultServiceBase, }, { log = log_1.defaultLogDriver, fetch = fetch_1.defaultFetch, } = {}) {
    const deps = { fetch, log };
    const apiConfig = { apiKey, serviceBase };
    return {
        notifyVCSBranchBuildDeployed: notify_vcs_branch_build_deployed_1.notifyVCSBranchBuildDeployed.bind(null, deps, apiConfig),
        notifyVCSBranchMergeCanceled: notify_vcs_branch_merge_canceled_1.notifyVCSBranchMergeCanceled.bind(null, deps, apiConfig),
        notifyVCSBranchMergeCompleted: notify_vcs_branch_merge_completed_1.notifyVCSBranchMergeCompleted.bind(null, deps, apiConfig),
    };
}
//# sourceMappingURL=index.js.map