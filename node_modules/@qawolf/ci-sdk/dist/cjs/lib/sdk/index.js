"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeQaWolfSdk = makeQaWolfSdk;
const tslib_1 = require("tslib");
const utils_1 = require("../utils");
const fetch_1 = require("./defaults/fetch");
const log_1 = require("./defaults/log");
const serviceBase_1 = require("./defaults/serviceBase");
const attempt_deploy_1 = require("./domain/attempt-deploy");
const index_1 = require("./domain/legacy_previewTesting/index");
const poll_ci_greenlight_1 = require("./domain/poll-ci-greenlight");
const vcsBranchTesting_1 = require("./domain/vcsBranchTesting");
function makeQaWolfSdk({ apiKey, serviceBase = serviceBase_1.defaultServiceBase, }, { log = log_1.defaultLogDriver, fetch = fetch_1.defaultFetch, } = {}) {
    if (typeof fetch !== "function") {
        throw new Error(`QA Wolf CI-SDK requires fetch to be defined. Make sure you are using NodeJS 18+, OR pass a fetch polyfill to the makeQaWolfSdk function.
We recommend 'undici' package for that purpose. See the Requirement section of our README for more guidance.`);
    }
    const deps = {
        // Versions of fetch may have different default timeouts. For consistency, we explicitly set it to 60 seconds here.
        fetch: (0, utils_1.buildFetchWithTimeout)(fetch, 60000),
        log,
    };
    const apiConfig = { apiKey, serviceBase };
    return {
        attemptNotifyDeploy: attempt_deploy_1.attemptNotifyDeploy.bind(null, deps, apiConfig),
        experimental_removeEnvironment: index_1.removeEnvironment.bind(null, deps, apiConfig),
        experimental_testPreview: index_1.testPreview.bind(null, deps, apiConfig),
        experimental_vcsBranchTesting: (0, vcsBranchTesting_1.makeVCSBranchTestingSDK)(apiConfig, deps),
        pollCiGreenlightStatus: poll_ci_greenlight_1.pollCiGreenlightStatus.bind(null, deps, apiConfig),
    };
}
tslib_1.__exportStar(require("./domain/vcsBranchTesting/index"), exports);
//# sourceMappingURL=index.js.map